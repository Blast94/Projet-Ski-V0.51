package Be.Rochez.InterfaceGraphique;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.EventQueue;

import javax.swing.JButton;
import javax.swing.JComboBox;
import javax.swing.JFrame;
import javax.swing.JPanel;
import javax.swing.border.EmptyBorder;

import Be.Rochez.Classes.AccreditationC;
import Be.Rochez.Classes.Cours;
import Be.Rochez.DAO.AccreditationDAO;
import Be.Rochez.DAO.ConnexionDAO;
import Be.Rochez.DAO.MoniteurDAO;
import Be.Rochez.Singleton.ListeCours;

import javax.swing.DefaultListModel;
import javax.swing.GroupLayout;
import javax.swing.GroupLayout.Alignment;
import javax.swing.JLabel;
import java.awt.Font;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.ArrayList;

import javax.swing.SwingConstants;
import javax.swing.LayoutStyle.ComponentPlacement;
import javax.swing.JList;

public class Accreditation extends JFrame implements ActionListener{

	private JPanel contentPane;
	private int monIdMoniteur;
	private MoniteurDAO m;
	private AccreditationDAO a;
	private JComboBox comboBox;
	private JButton btnValider;
	private JButton btnRetour;
	private JLabel lblErreur;
	
	/**
	 * Create the frame.
	 */
	public Accreditation(int id) {
		
		monIdMoniteur = id;
		
		setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		setBounds(100, 100, 600, 400);
		contentPane = new JPanel();
		contentPane.setBackground(Color.GRAY);
		contentPane.setBorder(new EmptyBorder(5, 5, 5, 5));
		setContentPane(contentPane);
		
		JPanel panel_1 = new JPanel();
		panel_1.setBackground(Color.DARK_GRAY);
		
		JLabel lblAccrditation = new JLabel("Accr\u00E9ditation");
		lblAccrditation.setForeground(Color.WHITE);
		lblAccrditation.setFont(new Font("Yu Gothic UI", Font.BOLD, 19));
		
		btnRetour = new JButton("Retour");
		GroupLayout gl_panel_1 = new GroupLayout(panel_1);
		gl_panel_1.setHorizontalGroup(
			gl_panel_1.createParallelGroup(Alignment.TRAILING)
				.addGroup(Alignment.LEADING, gl_panel_1.createSequentialGroup()
					.addContainerGap()
					.addComponent(lblAccrditation)
					.addPreferredGap(ComponentPlacement.RELATED, 340, Short.MAX_VALUE)
					.addComponent(btnRetour)
					.addGap(19))
		);
		gl_panel_1.setVerticalGroup(
			gl_panel_1.createParallelGroup(Alignment.LEADING)
				.addGap(0, 61, Short.MAX_VALUE)
				.addGroup(gl_panel_1.createSequentialGroup()
					.addGap(14)
					.addGroup(gl_panel_1.createParallelGroup(Alignment.BASELINE)
						.addComponent(lblAccrditation)
						.addComponent(btnRetour))
					.addContainerGap(21, Short.MAX_VALUE))
		);
		panel_1.setLayout(gl_panel_1);
		
		comboBox = new JComboBox();
		
		btnValider = new JButton("Valider");
		
		JList list = new JList();
		
		lblErreur = new JLabel("");
		lblErreur.setHorizontalAlignment(SwingConstants.CENTER);
		lblErreur.setForeground(Color.ORANGE);
		lblErreur.setFont(new Font("Yu Gothic UI", Font.BOLD, 13));
		
		btnSupprimer = new JButton("Supprimer");
		GroupLayout gl_contentPane = new GroupLayout(contentPane);
		gl_contentPane.setHorizontalGroup(
			gl_contentPane.createParallelGroup(Alignment.LEADING)
				.addGroup(gl_contentPane.createSequentialGroup()
					.addGroup(gl_contentPane.createParallelGroup(Alignment.LEADING)
						.addGroup(gl_contentPane.createParallelGroup(Alignment.LEADING, false)
							.addComponent(panel_1, GroupLayout.PREFERRED_SIZE, 573, GroupLayout.PREFERRED_SIZE)
							.addGroup(gl_contentPane.createSequentialGroup()
								.addComponent(comboBox, 0, 413, Short.MAX_VALUE)
								.addGap(28)
								.addComponent(btnValider, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
						.addComponent(lblErreur, GroupLayout.DEFAULT_SIZE, 573, Short.MAX_VALUE)
						.addGroup(gl_contentPane.createSequentialGroup()
							.addComponent(list, GroupLayout.PREFERRED_SIZE, 292, GroupLayout.PREFERRED_SIZE)
							.addPreferredGap(ComponentPlacement.UNRELATED)
							.addComponent(btnSupprimer)))
					.addContainerGap())
		);
		gl_contentPane.setVerticalGroup(
			gl_contentPane.createParallelGroup(Alignment.LEADING)
				.addGroup(gl_contentPane.createSequentialGroup()
					.addGap(5)
					.addComponent(panel_1, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
					.addPreferredGap(ComponentPlacement.RELATED)
					.addGroup(gl_contentPane.createParallelGroup(Alignment.BASELINE)
						.addComponent(comboBox, GroupLayout.PREFERRED_SIZE, 22, GroupLayout.PREFERRED_SIZE)
						.addComponent(btnValider))
					.addPreferredGap(ComponentPlacement.RELATED)
					.addComponent(lblErreur)
					.addPreferredGap(ComponentPlacement.RELATED, 28, Short.MAX_VALUE)
					.addGroup(gl_contentPane.createParallelGroup(Alignment.LEADING)
						.addComponent(btnSupprimer)
						.addComponent(list, GroupLayout.PREFERRED_SIZE, 219, GroupLayout.PREFERRED_SIZE)))
		);
		
		// Remplissage de la combobox des cours 
		ListeCours listeCours = ListeCours.Instance();
		comboBox.addItem("");
		for(int i = 0 ; i < listeCours.getListeCours().size(); i++)
		{
			comboBox.addItem(listeCours.getListeCours().get(i).toString());
		}
		btnValider.addActionListener(this);
		
		
		//Remplissage de la liste
		a = new AccreditationDAO(ConnexionDAO.getInstance());
		ArrayList<Cours> maListeAccreditation = new ArrayList<Cours>();
		System.out.println("avant Appel");
		maListeAccreditation = a.AccreditationProf(monIdMoniteur);
		System.out.println("Après Appel");
		DefaultListModel dlm = new DefaultListModel();
		for(int i = 0; i < maListeAccreditation.size(); i++)
		{
			dlm.addElement(maListeAccreditation.get(i).GetSport() + "  -  " + maListeAccreditation.get(i).GetCategorieAge() + "  -  " + maListeAccreditation.get(i).GetNiveau());
		}
		list.setModel(dlm);
		
		contentPane.setLayout(gl_contentPane);
		this.setVisible(true);
	}
	public void actionPerformed(ActionEvent arg0) {
		
		if(arg0.getSource() == btnValider)
		{
			if(!comboBox.getSelectedItem().toString().equals(""))
			{
				a = new AccreditationDAO(ConnexionDAO.getInstance());
				if(!a.AccreditationExistante(monIdMoniteur, comboBox.getSelectedIndex()))
				{
					AccreditationC monAccreditation = new AccreditationC(monIdMoniteur, comboBox.getSelectedIndex());
					a.create(monAccreditation);
					this.dispose();
					Accreditation fen = new Accreditation(monIdMoniteur);
				}	
				else
				{
					lblErreur.setText("Cette accréditation existe déja !");
				}
			}
			else
			{
				lblErreur.setText("Veuillez choisir un élément à ajouter !");
			}
		}
		if(arg0.getSource() == btnRetour)
		{
			this.dispose();
			MenuMoniteur fen = new MenuMoniteur(monIdMoniteur);
		}
		
	}
}
