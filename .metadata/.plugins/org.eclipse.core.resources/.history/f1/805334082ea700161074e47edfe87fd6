package Be.Rochez.InterfaceGraphique;

import java.awt.BorderLayout;
import java.awt.EventQueue;

import javax.swing.JFrame;
import javax.swing.JPanel;
import javax.swing.border.EmptyBorder;

import Be.Rochez.DAO.ClientDAO;
import Be.Rochez.DAO.ConnexionDAO;

import javax.swing.JLabel;
import javax.swing.SwingConstants;
import javax.swing.JTextField;
import javax.swing.JPasswordField;
import javax.swing.JButton;
import java.awt.event.ActionListener;
import java.awt.event.ActionEvent;
import java.awt.Color;
import java.awt.Font;
import javax.swing.UIManager;
import javax.swing.GroupLayout;
import javax.swing.GroupLayout.Alignment;
import javax.swing.LayoutStyle.ComponentPlacement;
import javax.swing.JRadioButton;
import javax.swing.JCheckBox;

public class Accueil extends JFrame implements ActionListener {

	private JPanel contentPane;
	private JTextField txtLogin;
	private JPasswordField txtPassword;
	private JButton btnConnexion;
	private JButton btnInscription;
	private JRadioButton rbClient;
	
	private ClientDAO c;

	/**
	 * Create the frame.
	 */
	public Accueil() {
		this.setTitle("Accueil");
		this.setResizable(false);
		this.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		this.setBounds(100, 100, 800, 600);
		this.getContentPane().setLayout(null);
		
		this.contentPane = new JPanel();
		this.contentPane.setBackground(Color.GRAY);
		this.contentPane.setBorder(new EmptyBorder(5, 5, 5, 5));
		this.setContentPane(contentPane);
		
		JPanel panel = new JPanel();
		panel.setBackground(Color.DARK_GRAY);
		
		JLabel lblPseudo = new JLabel("Pseudo");
		lblPseudo.setFont(new Font("Yu Gothic UI", Font.BOLD, 13));
		lblPseudo.setForeground(Color.WHITE);
		lblPseudo.setHorizontalAlignment(SwingConstants.RIGHT);
		
		txtLogin = new JTextField();
		lblPseudo.setLabelFor(txtLogin);
		txtLogin.setColumns(10);
		
		JLabel lblPassword = new JLabel("Password");
		lblPassword.setFont(new Font("Yu Gothic UI", Font.BOLD, 13));
		lblPassword.setForeground(Color.WHITE);
		
		txtPassword = new JPasswordField();
		txtPassword.setHorizontalAlignment(SwingConstants.LEFT);
		lblPassword.setLabelFor(txtPassword);
		txtPassword.setColumns(10);
		
		btnConnexion = new JButton("Connexion");
		
		btnConnexion.setHorizontalAlignment(SwingConstants.TRAILING);
		
		JLabel lblNewLabel = new JLabel("            Bienvenue au Domaine du Chalet 260m");
		lblNewLabel.setBackground(Color.WHITE);
		lblNewLabel.setForeground(Color.WHITE);
		lblNewLabel.setFont(new Font("Yu Gothic UI", Font.BOLD | Font.ITALIC, 20));
		GroupLayout gl_contentPane = new GroupLayout(contentPane);
		gl_contentPane.setHorizontalGroup(
			gl_contentPane.createParallelGroup(Alignment.LEADING)
				.addComponent(panel, GroupLayout.DEFAULT_SIZE, 784, Short.MAX_VALUE)
				.addGroup(Alignment.TRAILING, gl_contentPane.createSequentialGroup()
					.addContainerGap(108, Short.MAX_VALUE)
					.addComponent(lblNewLabel, GroupLayout.PREFERRED_SIZE, 584, GroupLayout.PREFERRED_SIZE)
					.addGap(92))
		);
		gl_contentPane.setVerticalGroup(
			gl_contentPane.createParallelGroup(Alignment.LEADING)
				.addGroup(gl_contentPane.createSequentialGroup()
					.addComponent(panel, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
					.addGap(112)
					.addComponent(lblNewLabel, GroupLayout.PREFERRED_SIZE, 328, GroupLayout.PREFERRED_SIZE)
					.addGap(68))
		);
		
		rbClient = new JRadioButton("Client");
		rbClient.setSelected(true);
		rbClient.setFont(new Font("Yu Gothic UI", Font.BOLD, 11));
		rbClient.setForeground(Color.WHITE);
		rbClient.setBackground(Color.DARK_GRAY);
		
		JRadioButton rbMoniteur = new JRadioButton("Moniteur");
		rbMoniteur.setFont(new Font("Yu Gothic UI", Font.BOLD, 11));
		rbMoniteur.setBackground(Color.DARK_GRAY);
		rbMoniteur.setForeground(Color.WHITE);
		
		btnInscription = new JButton("Inscription");
		
		btnInscription.addActionListener(this);
		GroupLayout gl_panel = new GroupLayout(panel);
		gl_panel.setHorizontalGroup(
			gl_panel.createParallelGroup(Alignment.TRAILING)
				.addGroup(gl_panel.createSequentialGroup()
					.addContainerGap()
					.addComponent(btnInscription)
					.addPreferredGap(ComponentPlacement.RELATED, 202, Short.MAX_VALUE)
					.addComponent(lblPseudo)
					.addPreferredGap(ComponentPlacement.UNRELATED)
					.addComponent(txtLogin, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
					.addPreferredGap(ComponentPlacement.UNRELATED)
					.addComponent(lblPassword)
					.addPreferredGap(ComponentPlacement.UNRELATED)
					.addComponent(txtPassword, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
					.addPreferredGap(ComponentPlacement.RELATED)
					.addGroup(gl_panel.createParallelGroup(Alignment.LEADING)
						.addComponent(rbClient)
						.addGroup(gl_panel.createSequentialGroup()
							.addPreferredGap(ComponentPlacement.RELATED)
							.addComponent(rbMoniteur)))
					.addGap(18)
					.addComponent(btnConnexion)
					.addContainerGap())
		);
		gl_panel.setVerticalGroup(
			gl_panel.createParallelGroup(Alignment.LEADING)
				.addGroup(gl_panel.createSequentialGroup()
					.addGroup(gl_panel.createParallelGroup(Alignment.LEADING)
						.addGroup(gl_panel.createSequentialGroup()
							.addComponent(rbClient)
							.addPreferredGap(ComponentPlacement.RELATED)
							.addComponent(rbMoniteur))
						.addGroup(gl_panel.createSequentialGroup()
							.addContainerGap()
							.addComponent(btnConnexion))
						.addGroup(gl_panel.createSequentialGroup()
							.addContainerGap()
							.addGroup(gl_panel.createParallelGroup(Alignment.BASELINE)
								.addComponent(btnInscription)
								.addComponent(txtLogin, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
								.addComponent(lblPseudo)
								.addComponent(lblPassword)
								.addComponent(txtPassword, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))))
					.addContainerGap(2, Short.MAX_VALUE))
		);
		panel.setLayout(gl_panel);
		contentPane.setLayout(gl_contentPane);
		btnConnexion.addActionListener(this);
		this.setVisible(true);
	}
	public void actionPerformed(ActionEvent arg0) {
		if(arg0.getSource() == btnInscription)
		{
			this.dispose();
	        InscriptionClient fen = new InscriptionClient();
		}
		if(arg0.getSource() == btnConnexion)
		{
			c = new ClientDAO(ConnexionDAO.getInstance());
			int monIdClient = c.ConnexionClient(txtLogin.getText().trim(), txtPassword.getText()); 
			if(monIdClient == -1)
			{
				System.out.println("Le mot de passe saisi est incorrect");
			}
			else if(monIdClient == -2)
			{
				System.out.println("Le login n'existe pas");
			}
			else if(monIdClient == -3)
			{
				System.out.println("Erreur lors de la connexion");
			}
			else
			{
				this.dispose();
				MenuClient fen = new MenuClient(monIdClient);
			}
			
		}
	} 
}
