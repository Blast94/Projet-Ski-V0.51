package Be.Rochez.InterfaceGraphique;

import java.awt.BorderLayout;
import java.awt.EventQueue;

import javax.swing.JFrame;
import javax.swing.JPanel;
import javax.swing.border.EmptyBorder;

import Be.Rochez.Classes.Cours;
import Be.Rochez.Classes.PanierC;
import Be.Rochez.Classes.ReservationC;
import Be.Rochez.DAO.AccreditationDAO;
import Be.Rochez.DAO.ConnexionDAO;
import Be.Rochez.DAO.ReservationDAO;

import java.awt.Color;

import javax.swing.DefaultListModel;
import javax.swing.GroupLayout;
import javax.swing.GroupLayout.Alignment;
import javax.swing.JLabel;
import java.awt.Font;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.ArrayList;

import javax.swing.JButton;
import javax.swing.LayoutStyle.ComponentPlacement;
import javax.swing.JScrollPane;
import javax.swing.SwingConstants;
import javax.swing.JList;

public class Panier extends JFrame implements ActionListener {

	private JPanel contentPane;
	private JButton btnSupprimer;
	private JButton btnPayer;
	private JButton btnAnnuler;
	private JButton btnAutreReservation;
	private int monIdClient;
	private JList list;
	private int prixTotal = 0;
	ReservationDAO reservationDAO;
	/**
	 * Create the frame.
	 */
	public Panier(int id) {
		
		monIdClient = id;
		
		setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		setBounds(100, 100, 600, 400);
		contentPane = new JPanel();
		contentPane.setBackground(Color.GRAY);
		contentPane.setBorder(new EmptyBorder(5, 5, 5, 5));
		setContentPane(contentPane);
		
		JPanel panel = new JPanel();
		panel.setBackground(Color.DARK_GRAY);
		
		JLabel lblPanier = new JLabel("Panier");
		lblPanier.setForeground(Color.WHITE);
		lblPanier.setFont(new Font("Yu Gothic UI", Font.BOLD, 19));
		
		btnAnnuler = new JButton("Annuler");
		
		btnAutreReservation = new JButton("Autre R\u00E9servation");
		GroupLayout gl_panel = new GroupLayout(panel);
		gl_panel.setHorizontalGroup(
			gl_panel.createParallelGroup(Alignment.LEADING)
				.addGroup(gl_panel.createSequentialGroup()
					.addContainerGap()
					.addComponent(lblPanier)
					.addPreferredGap(ComponentPlacement.RELATED, 303, Short.MAX_VALUE)
					.addComponent(btnAnnuler)
					.addPreferredGap(ComponentPlacement.RELATED)
					.addComponent(btnAutreReservation)
					.addContainerGap())
		);
		gl_panel.setVerticalGroup(
			gl_panel.createParallelGroup(Alignment.LEADING)
				.addGroup(gl_panel.createSequentialGroup()
					.addGap(14)
					.addGroup(gl_panel.createParallelGroup(Alignment.BASELINE)
						.addComponent(lblPanier)
						.addComponent(btnAutreReservation)
						.addComponent(btnAnnuler))
					.addContainerGap(21, Short.MAX_VALUE))
		);
		panel.setLayout(gl_panel);
		
		JScrollPane scrollPane = new JScrollPane();
		
		btnSupprimer = new JButton("Supprimer");
		
		JLabel lblTotal = new JLabel("");
		lblTotal.setHorizontalAlignment(SwingConstants.LEFT);
		lblTotal.setForeground(Color.WHITE);
		lblTotal.setFont(new Font("Yu Gothic UI", Font.BOLD, 13));
		
		btnPayer = new JButton("Payer");
		GroupLayout gl_contentPane = new GroupLayout(contentPane);
		gl_contentPane.setHorizontalGroup(
			gl_contentPane.createParallelGroup(Alignment.LEADING)
				.addGroup(gl_contentPane.createSequentialGroup()
					.addGroup(gl_contentPane.createParallelGroup(Alignment.LEADING)
						.addGroup(gl_contentPane.createSequentialGroup()
							.addGroup(gl_contentPane.createParallelGroup(Alignment.LEADING, false)
								.addGroup(gl_contentPane.createSequentialGroup()
									.addGap(482)
									.addComponent(btnSupprimer))
								.addGroup(gl_contentPane.createSequentialGroup()
									.addContainerGap()
									.addComponent(scrollPane)))
							.addGap(949)
							.addComponent(lblTotal, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
						.addGroup(gl_contentPane.createSequentialGroup()
							.addGap(394)
							.addComponent(btnPayer))
						.addComponent(panel, GroupLayout.PREFERRED_SIZE, 573, GroupLayout.PREFERRED_SIZE))
					.addContainerGap())
		);
		gl_contentPane.setVerticalGroup(
			gl_contentPane.createParallelGroup(Alignment.LEADING)
				.addGroup(gl_contentPane.createSequentialGroup()
					.addComponent(panel, GroupLayout.PREFERRED_SIZE, 64, GroupLayout.PREFERRED_SIZE)
					.addGap(7)
					.addComponent(btnSupprimer)
					.addGroup(gl_contentPane.createParallelGroup(Alignment.LEADING)
						.addGroup(gl_contentPane.createSequentialGroup()
							.addGap(191)
							.addComponent(lblTotal))
						.addGroup(gl_contentPane.createSequentialGroup()
							.addGap(6)
							.addComponent(scrollPane, GroupLayout.PREFERRED_SIZE, 211, GroupLayout.PREFERRED_SIZE)))
					.addPreferredGap(ComponentPlacement.UNRELATED)
					.addComponent(btnPayer)
					.addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
		);
		
		list = new JList();
		scrollPane.setViewportView(list);
		
		
		//Remplissage de la liste
		reservationDAO= new ReservationDAO(ConnexionDAO.getInstance());
		PanierC monPanierReservation = new PanierC();
		monPanierReservation.SetMonPanier(reservationDAO.RecuperationReservationPanier(monIdClient));
		
		DefaultListModel dlm = new DefaultListModel();
		for(int i = 0; i < monPanierReservation.GetMonPanier().size(); i++)
		{
			//Modification des condition du prix du cours si c'est un cours particulier qui est sélectionné
			if(monPanierReservation.GetMonPanier().get(i).GetCours().GetTypeCours().GetDenomination().equals("Particulier"))
			{
				monPanierReservation.GetMonPanier().get(i).GetCours().SetPrix(monPanierReservation.GetMonPanier().get(i).GetHoraire().GetPrixParticulier());
			} 
			dlm.addElement(monPanierReservation.GetMonPanier().get(i).toString());
		}
		list.setModel(dlm);
		
		btnAnnuler.addActionListener(this);
		btnAutreReservation.addActionListener(this);
		btnPayer.addActionListener(this);
		btnSupprimer.addActionListener(this);
		contentPane.setLayout(gl_contentPane);
		this.setVisible(true);
	}
	public void actionPerformed(ActionEvent arg0) {
		if(arg0.getSource()  == btnAnnuler)
		{
			this.dispose();
			MenuClient fen = new MenuClient(monIdClient);
		}
		if(arg0.getSource() == btnAutreReservation)
		{
			this.dispose();
			Reservation fen = new Reservation(monIdClient);
		}
		if(arg0.getSource() == btnSupprimer)
		{
			if(list.getSelectedIndex() != -1)
			{
				reservationDAO = new ReservationDAO(ConnexionDAO.getInstance());
				String[] s = list.getSelectedValue().toString().split(" - ");
				reservationDAO.delete(Integer.parseInt(s[0]));
				this.dispose();
				Panier fen = new Panier(monIdClient);
			}
		}
		if(arg0.getSource() == btnPayer)
		{
			
		}
	}
}
